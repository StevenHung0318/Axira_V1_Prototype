Project: Suitagy — Sui DeFi Strategies (PoC)

Goal
Create a tiny but polished PoC Dapp with mocked data only (no chain calls).
Tech: Vite + React + TypeScript + Tailwind. Add chart.js for line charts and mermaid for a simple flow chart.
Two routes: Home (/) and Vault (/:id).

Design
Dark theme (black/blue), rounded corners, subtle gradients and soft shadows. Clean, mobile-friendly.

Data model (mock)
type RewardToken = 'BTC' | 'SUI' | 'ETH';
type Vault = {
  id: 'btcUSD' | 'suiUSD' | 'ethUSD';
  name: string;                     // e.g., "btcUSD"
  reward: RewardToken;              // decides icons & claim token
  tvl: number;                      // mocked USD
  depositCap: number;               // USD cap
  deposited: number;                // USD currently deposited (for ring)
  baseAprStableLayer: number;       // e.g., 12
  naviSupplyApr: number;            // e.g., 3
  performanceFeePct: number;        // 10
  status: 'Open' | 'Coming';
  contract: string;                 // e.g., "0xabc...1321"
  dailyApr: number[];               // past daily APR points for the line chart
};

Seed vaults (example values OK):
- btcUSD (Open): reward=BTC, tvl=2_300_000, depositCap=5_000_000, deposited=2_170_000, baseAprStableLayer=12, naviSupplyApr=3, performanceFeePct=10, contract="0xabc...1321", dailyApr ~ [8.7, 9.1, 8.9, 9.0, 8.8, 9.2, 8.9, 9.0, 8.8, 9.1, 8.9, 8.7, 8.8]
- suiUSD (Coming): reward=SUI, similar mock numbers, dailyApr ~ [20, 21, 20.4, 19.8, 20.2, 20.1, 20.3]
- ethUSD (Coming): reward=ETH, dailyApr ~ [10.1, 10.3, 10.0, 9.9, 10.2, 10.1, 10.4]

Prices for conversion (mock, editable in state/settings):
BTC=60_000, SUI=1.5, ETH=3_000.

Computed metrics
- totalAPR(%) = (baseAprStableLayer + naviSupplyApr) * (1 - performanceFeePct/100)
- averageAPR = average(dailyApr)
- accrual per second (USD) for active vault position:
  usdPerSec = principalUSDC * (totalAPR / 100) / 31_536_000  // linear for PoC
  claimableRewardTokens = accruedUSD / rewardTokenPrice
- Performance fee of 10% is charged at claim time on the reward tokens.

Global state (React Context or simple hooks)
wallet: { connected:boolean, address?:string, usdc:number, rewards:{BTC:number, SUI:number, ETH:number} }
positions: keyed by vault id -> { principalUsdc:number, accruedUsd:number, lifetimeRewardTokens:number, lastTs:number }
settings: { btcPrice:number, suiPrice:number, ethPrice:number }

Home (/) — Volo-like cards + table
- Header: left text logo “Suitagy”, center KPIs “Vaults TVL” and “Total Yields” (mock sums), right “Connect” toggles a mock address 0xSUI...SUITAGY.
- Three FEATURED cards (btcUSD open, others coming):
  • Show “Vault APR” as a large number = totalAPR%, and SHOW THE REWARD TOKEN LOGO right next to the APR (BTC for btcUSD, SUI for suiUSD, ETH for ethUSD).
  • Show “Deposit cap: XXX USDC”
  • A circular ring visualization for (deposited / depositCap). Implement with pure SVG: two circles (track + progress), and percentage text centered (e.g., 94.5%).
  • “Stake Now” CTA -> /vault/btcUSD (disabled for Coming soon vaults).
- Below, a small table list: Vault | Total Staked (TVL) | Vault APR | Status | You Staked | Action (Stake -> route to vault if Open).

Vault page (/vault/btcUSD)
Right panel (actions):
- Two tabs: Stake and Unstake. NO minimum investment requirement (no min checks).
- Input (USDC), MAX chip, button to Stake/Unstake (updates mock state).
- A “Your Rewards” card showing:
  • real-time accumulating reward token amount (e.g., BTC for btcUSD)
  • a Claim button that transfers (claimable * (1 - 0.10)) to wallet.rewards[token] and resets accrued; also adds to lifetimeRewardTokens.
- Show a small APR badge where the number is followed by the reward token icon (so users know the reward form).

Left panel (analytics):
- Three stat tiles:
  • Your Positions — in USD (principalUSDC)
  • APR — totalAPR% (with reward token icon)
  • Lifetime Yields — display in REWARD TOKEN units (e.g., “0.1234 BTC”), not USD.
- “7-Day Strategy APR” line chart using chart.js:
  • X: past N days (use dailyApr length)
  • Y: APR %
  • One line for daily APR, and a second dataset that is a horizontal dashed line at averageAPR (use `borderDash: [6,6]`).
  • Display averageAPR value in the legend.
- Strategy flow chart using mermaid (dark theme) with EXACT steps:
  Users deposit USDC --> StableLayer --> USDB yields swapped to REWARD TOKEN (e.g., BTC) --> REWARD TOKEN to NAVI protocol Lending
  Render the mermaid graph inside a card.
- “Risk & Breakdown” details (collapsible). EXACT content:
  Risk Level: Low Risk
  Nature of Strategies: Incentive from High Yield Assets
  Complexity: Low
  Underlaying Protocols: StableLayer (Bucket), NAVI
  Entry Cost: 0%
  Performance Fee: 10% charged by Suitagy
  Contract Link: 0xabc...1321   // render as a link-like text

Icons / Logos
- Reward token icon is a tiny colored circle with a glyph: BTC=₿ (orange), SUI=S (blue), ETH=Ξ (purple). Place the icon immediately next to APR text wherever APR is shown (cards & vault page). Lifetime yields also show the same icon.

Accrual loop
- In Vault component, start a 1s interval:
  • compute delta time since lastTs, increase accruedUsd by usdPerSec * dt
  • recompute claimable tokens = accruedUsd / price[reward]
  • update state; clear on unmount.

File structure (keep small)
src/
  main.tsx
  App.tsx               // routes
  styles.css            // Tailwind base + a few utilities
  data.ts               // seed vaults & token meta
  state.ts              // context for wallet & positions
  components/
    Header.tsx
    VaultCard.tsx
    Ring.tsx            // pure SVG ring progress with center % text
    TokenIcon.tsx
    LineAprChart.tsx    // chart.js wrapper; includes average dashed line
    MermaidFlow.tsx     // init mermaid and render the flow chart
  pages/
    Home.tsx
    Vault.tsx

Implementation notes
- Install deps: tailwindcss postcss autoprefixer chart.js mermaid react-router-dom
- Tailwind: set up with `@tailwind base; @tailwind components; @tailwind utilities;` and a couple of custom classes for gradients.
- Keep components tiny; prefer inline styles/classes over heavy design systems.
- No analytics, no persistence. Everything in memory.
- No min investment checks anywhere.
- Buttons: blue gradient; inputs: dark with subtle border. Add MAX button for inputs.

Acceptance
[ ] Home shows 3 cards; btcUSD is Open. Each card displays Vault APR with the correct reward token icon, “Deposit cap XXX USDC”, and a circular ring (deposited/cap).
[ ] Table below cards matches the columns and has a Stake action.
[ ] Vault page shows: Stake/Unstake (no min), Your Rewards with real-time accumulating reward token and a Claim button, and “Lifetime Yields” rendered in the reward token units.
[ ] APR line chart shows daily APR + a dashed Average APR line.
[ ] Strategy flow chart matches the specified 4 steps exactly.
[ ] Risk & Breakdown collapsible contains the exact text provided.
[ ] Performance fee of 10% is applied at claim time.
[ ] Everything runs with mocked data; no blockchain calls.